{
	"info": {
		"_postman_id": "a1295f07-dff7-48f9-8420-740b184e388a",
		"name": "laravel-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "19273875",
		"_collection_link": "https://befwork.postman.co/workspace/laravel-and-flutter-developer~f620db7f-e2cb-4ef8-aceb-ac5ea51b4866/collection/19273875-a1295f07-dff7-48f9-8420-740b184e388a?action=share&source=collection_link&creator=19273875"
	},
	"item": [
		{
			"name": "posts",
			"item": [
				{
					"name": "comments",
					"item": [
						{
							"name": "index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/posts/:id/comments",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"komen dulu bang 123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/posts/:id/comments",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "43"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"komen dulu bang yaasd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/posts/comments/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "19"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/posts/comments/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "7"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "like",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/posts/comments/:id/like",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										"comments",
										":id",
										"like"
									],
									"variable": [
										{
											"key": "id",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "dislike",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/posts/comments/:id/dislike",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										"comments",
										":id",
										"dislike"
									],
									"variable": [
										{
											"key": "id",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "show",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/posts/comments/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "30"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/posts?search=tesdcfss",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "status",
									"value": "0",
									"disabled": true
								},
								{
									"key": "author",
									"value": "test",
									"disabled": true
								},
								{
									"key": "date_start",
									"value": "2023-08-31",
									"disabled": true
								},
								{
									"key": "date_end",
									"value": "2023-12-31",
									"disabled": true
								},
								{
									"key": "search",
									"value": "tesdcfss"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "show",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/posts/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "26"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"If response status is 201, post has been created\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Title 1\",\n    \"content\": \"Content 1\",\n    \"status\": false,\n    \"published_date\": \"2023-08-31\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/posts"
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"halo asd\",\n    \"content\": \"Content 1 update1\",\n    \"status\": false,\n    \"published_date\": \"2023-08-31\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/posts/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "destroy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/posts/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "like",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/posts/:id/like",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								":id",
								"like"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "dislike",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/posts/:id/dislike",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								":id",
								"dislike"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status is 201",
									"pm.test(\"Status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Get the token from the response and store it in a variable",
									"pm.test(\"Store token from response\", function () {",
									"    var responseBody = pm.response.json();",
									"    var token = responseBody.token;",
									"",
									"    // Store the token in a global variable",
									"    pm.collectionVariables.set(\"token\", token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "test1",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test2@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/register"
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/logout"
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status is 201",
									"pm.test(\"Status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Get the token from the response and store it in a variable",
									"pm.test(\"Store token from response\", function () {",
									"    var responseBody = pm.response.json();",
									"    var token = responseBody.token;",
									"",
									"    // Store the token in a global variable",
									"    pm.collectionVariables.set(\"token\", token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "user@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/login"
					},
					"response": []
				},
				{
					"name": "check",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/auth/check"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:8000/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}